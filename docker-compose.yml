version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/ || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10

  trainer:
    build:
      context: .
      dockerfile: worker/Dockerfile
    command: ["train_pca_run.py"]
    environment:
      - ES_HOST=http://elasticsearch:9200
      - IPCA_HOG_OUTPUT=/models/ipca_hog.joblib
      - PYTHONUNBUFFERED=1
      - DATA_ROOT=/data
      - TAGS_ROOT=/tags
    volumes:
      - ./shared:/app/shared:ro
      - ./Data/images:/data:ro
      - ./Data/tags:/tags:ro
      - ./models:/models
      - ./logs/trainer:/var/log/trainer
    depends_on:
      - elasticsearch
    restart: "no"
    # optional resource hints (only applied in swarm / some orchestrators)
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: "2.0"

  indexer:
    build:
      context: .
      dockerfile: worker/Dockerfile
    # use the directory-walking indexer (no CSV). Use --op create to safely resume.
    command: ["indexer.py"]
    environment:
      - ES_HOST=http://elasticsearch:9200
      - ES_INDEX=images
      - IPCA_HOG=/models/ipca_hog.joblib
      - BATCH=256
      - DATA_ROOT=/data
      - TAGS_ROOT=/tags
      - MODELS_DIR=/models
      - PYTHONUNBUFFERED=1
    volumes:
      - ./shared:/app/shared:ro
      - ./Data/images:/data:ro
      - ./Data/tags:/tags:ro
      - ./models:/models
      - ./logs/indexer:/var/log/indexer
    depends_on:
      - elasticsearch
      - trainer
    restart: "no"
    deploy:
      resources:
        limits:
          memory: 12G
          cpus: "4.0"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - ES_HOST=http://elasticsearch:9200
      - ES_INDEX=images
      - PYTHONUNBUFFERED=1
    volumes:
      - ./shared:/app/shared:ro
      - ./models:/models:ro
      - ./logs/backend:/var/log/backend
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
      - indexer
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "1.0"

volumes:
  esdata:
